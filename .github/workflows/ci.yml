name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build backend Docker image
        run: docker build -t backend ./backend

      - name: Build frontend Docker image
        run: docker build -t frontend ./frontend

      - name: Run backend container
        run: docker run -d --name backend -e MONGO_URI=mongodb://mongo:27017/mydatabase -p 3000:3000 --network host backend

      - name: Run frontend container
        run: docker run -d --name frontend -p 5173:5173 --network host frontend

      - name: Wait for backend to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:3000 > /dev/null; then
              echo "Backend is ready"
              exit 0
            fi
            echo "Waiting for backend..."
            sleep 5
          done
          echo "Backend did not become ready in time"
          exit 1

      - name: Wait for frontend to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:5173 > /dev/null; then
              echo "Frontend is ready"
              exit 0
            fi
            echo "Waiting for frontend..."
            sleep 5
          done
          echo "Frontend did not become ready in time"
          exit 1

      - name: Run tests
        run: docker exec backend npm test
